All criteria listed in the assessment document is met:
- Display a list of all customers
- Add a customer
- Edit a customer
- Delete a customer

Improvements of the system code/design:
One particular element of the system that can be improved upon is the dropdown list on the Edit Customer Details form. In order to display the dropdown list the best practise would be to use the HTMLHelper DropDownListFor, which automatically iterates through and generates some drop down list selections in such a way that when the user attempts to edit a customer's details, the previously selected title, which is stored in the database, is already selected. For some reason, the DropDownListFor was not working properly so I had to manually create a for loop that generates the drop-down list on the edit form and then set the selected value stored in the database this way. This is slightly longer, but the code is still readable and understandable, nonetheless.

A second improvement that can be made pertains to the  validation rules set in the CustomerModel.cs class. At this moment, the only validation rule that is set is the [Required] attribute. There could be further validation such as having a minimum age restriction or checking that the telephone number field is of the correct length and format or that the address fields are of the correct format.

Improvements of the system functionality:
While the system has Authentication functionality, such as the login and register pages, there are no actual accounts set up. A way the system could be improved is by designing the system in such a way that a system administrator has to login and then the list of customers and their details would be displayed on this account. Right now the list of customers are available for every user to see regardless of them being logged in or not. This is a big issue with regards to the privacy of customers and keeping their details safe from people who may have malicious intent. With the limited time, this functionality was not fully implemented but this is something to definitely implement in the future. Implementing this would require some sort of field in the user table that keeps track of who is and is not an admin so that different users have access to different pages depending on their authority/system role e.g. admin or customer.

At present, the systems involves one page that displays a list of customers in a tabular format. Each row is one customer, and each row has edit and delete buttons associated with the customer in that row. It would be useful to have a 'details' button so that the initial list of customers does not display all of the customers' details on one page. Rather, the system would display some details such as Title, Firstname, Surname but then other information could be accessed upon clicking the details button so as to not overwhelm the system user with lots of possibly unnecessary information on one page. Of course, the decision of which attributes to include on the 'Details' page is system logic that would have to be decided by the Tracer's Cafe representatives who would be working with the development team to provide such information.

A third improvement would be to extend the scope of the system to include various other functionality such as allowing customers to register and keep track of their loyalty card points on there. Furthermore, Tracer's Cafe may opt to have a cardless system whereby no physical loyalty card is required and logged in users can just scan their phone to pick up points when purchasing items from the cafe. This is especially huge in this current day and age where everything seems to be rapidly moving online rather than having physical items. Another feature could be to display which items in the Cafe users can purchase with the current number of points they have earned.
